const GLOBALS = {
  // angular globals
  '@angular/animations': 'ng.animations',
  '@angular/core': 'ng.core',
  '@angular/common': 'ng.common',
  '@angular/platform-browser': 'ng.platformBrowser',

  // cdk globals
  '@angular/cdk/a11y': 'ng.cdk.a11y',
  '@angular/cdk/coercion': 'ng.cdk.coercion',
  '@angular/cdk/keycodes': 'ng.cdk.keycodes',
  '@angular/cdk/overlay': 'ng.cdk.overlay',
  '@angular/cdk/portal': 'ng.cdk.portal',

  // 'rxjs/observable/merge': 'Rx.Observable',
  // 'rxjs/operators': 'Rx.Observable',
  // 'rxjs/operators/index': 'Rx.Observable',

  // // rxjs globals
  // 'rxjs/Subject': 'Rx',
  // 'rxjs/Observable': 'Rx',
  // 'rxjs/add/operator/takeUntil': 'Rx.Observable.prototype',
  // 'rxjs/add/operator/switchMap': 'Rx.Observable.prototype',
  // 'rxjs/add/operator/take': 'Rx.Observable.prototype',
  // 'rxjs/add/observable/merge': 'Rx.Observable',

  // 'rxjs/BehaviorSubject': 'Rx',
  // 'rxjs/Observable': 'Rx',
  // 'rxjs/Subject': 'Rx',
  // 'rxjs/Subscription': 'Rx',
  // 'rxjs/Observer': 'Rx',
  // 'rxjs/Subscriber': 'Rx',
  // 'rxjs/Scheduler': 'Rx',
  // 'rxjs/observable/combineLatest': 'Rx.Observable',
  // 'rxjs/observable/forkJoin': 'Rx.Observable',
  // 'rxjs/observable/fromEvent': 'Rx.Observable',
  // 'rxjs/observable/merge': 'Rx.Observable',
  // 'rxjs/observable/of': 'Rx.Observable',
  // 'rxjs/observable/throw': 'Rx.Observable',
  // 'rxjs/observable/defer': 'Rx.Observable',
  // 'rxjs/observable/fromEventPattern': 'Rx.Observable',
  // 'rxjs/observable/empty': 'Rx.Observable',
  // 'rxjs/operators': 'Rx.Observable',
  // 'rxjs/operators/index': 'Rx.Observable',

  // 'rxjs/add/observable/merge': 'Rx.Observable',
  // 'rxjs/add/observable/fromEvent': 'Rx.Observable',
  // 'rxjs/add/observable/of': 'Rx.Observable',
  // 'rxjs/add/observable/interval': 'Rx.Observable',
  // 'rxjs/add/operator/startWith': 'Rx.Observable.prototype',
  // 'rxjs/add/operator/map': 'Rx.Observable.prototype',
  // 'rxjs/add/operator/debounceTime': 'Rx.Observable.prototype',
  // 'rxjs/add/operator/distinctUntilChanged': 'Rx.Observable.prototype',
  // 'rxjs/add/operator/first': 'Rx.Observable.prototype',
  // 'rxjs/add/operator/catch': 'Rx.Observable.prototype',
  // 'rxjs/add/operator/switchMap': 'Rx.Observable.prototype'

  'rxjs/BehaviorSubject': 'Rx',
  'rxjs/Observable': 'Rx',
  'rxjs/Subject': 'Rx',
  'rxjs/Subscription': 'Rx',
  'rxjs/Observer': 'Rx',
  'rxjs/Subscriber': 'Rx',
  'rxjs/Scheduler': 'Rx',

  'rxjs/observable/combineLatest': 'Rx.Observable',
  'rxjs/observable/forkJoin': 'Rx.Observable',
  'rxjs/observable/fromEvent': 'Rx.Observable',
  'rxjs/observable/merge': 'Rx.Observable',
  'rxjs/observable/of': 'Rx.Observable',
  'rxjs/observable/throw': 'Rx.Observable',
  'rxjs/observable/defer': 'Rx.Observable',
  'rxjs/observable/fromEventPattern': 'Rx.Observable',
  'rxjs/observable/empty': 'Rx.Observable',

  'rxjs/operators/debounceTime': 'Rx.Observable',
  'rxjs/operators/takeUntil': 'Rx.Observable',
  'rxjs/operators/take': 'Rx.Observable',
  'rxjs/operators/first': 'Rx.Observable',
  'rxjs/operators/filter': 'Rx.Observable',
  'rxjs/operators/map': 'Rx.Observable',
  'rxjs/operators/tap': 'Rx.Observable',
  'rxjs/operators/startWith': 'Rx.Observable',
  'rxjs/operators/auditTime': 'Rx.Observable',
  'rxjs/operators/switchMap': 'Rx.Observable',
  'rxjs/operators/finalize': 'Rx.Observable',
  'rxjs/operators/catchError': 'Rx.Observable',
  'rxjs/operators/share': 'Rx.Observable',
  'rxjs/operators/delay': 'Rx.Observable',
  'rxjs/operators/combineLatest': 'Rx.Observable',

  'rxjs/add/observable/merge': 'Rx.Observable',
  'rxjs/add/observable/fromEvent': 'Rx.Observable',
  'rxjs/add/observable/of': 'Rx.Observable',
  'rxjs/add/observable/interval': 'Rx.Observable',
  'rxjs/add/operator/startWith': 'Rx.Observable.prototype',
  'rxjs/add/operator/map': 'Rx.Observable.prototype',
  'rxjs/add/operator/debounceTime': 'Rx.Observable.prototype',
  'rxjs/add/operator/distinctUntilChanged': 'Rx.Observable.prototype',
  'rxjs/add/operator/first': 'Rx.Observable.prototype',
  'rxjs/add/operator/catch': 'Rx.Observable.prototype',
  'rxjs/add/operator/switchMap': 'Rx.Observable.prototype'

};

module.exports = GLOBALS;
